button {
	background: var(--ButtonFace);
	border: 2px outset var(--ButtonFace);
	position: relative;
	outline: none; /* TODO! */
}
button:active {
	border: 2px inset var(--ButtonFace);
}
/* TODO! (this doesn't work without child ELEMENT) */
/* also, this is more complicated; see Paint; the tool buttons translate when being pushed and when depressed, and these add together */
/*button:active > * {
	position: relative;
	left: 1px;
	top: 1px;
}
*/
/* @supports selector(a::after) { ... } doesn't work */
@supports (--supports: supports) {
	button,
	button:active,
	button.selected {
		border: none;
	}
	button {
		border-color: var(--ButtonHilight) var(--ButtonShadow) var(--ButtonShadow) var(--ButtonHilight);
		border-style: solid;
		border-width: 1px 1px;
	}
	button:active {
		border-color: var(--ButtonShadow);
		border-style: solid;
		border-width: 1px 1px;
	}
	button::after {
		content: "";
		display: block;
		position: absolute;
		left: -1px;
		top: -1px;
		right: -2px;
		bottom: -2px;
		border-right: 1px solid var(--ButtonDkShadow);
		border-bottom: 1px solid var(--ButtonDkShadow);
	}
}
button.selected {
	@extend button:active;
}

/* TODO: inactive styles */
.window-titlebar {
	background: var(--ActiveTitle);
	background: linear-gradient(to right, var(--ActiveTitle) 0%, var(--GradientActiveTitle) 100%);
	
	color: var(--TitleText);
	font-family: 'Segoe UI', sans-serif;
	font-size: 12px;
}
.window {
	background: var(--Window);
	/*color: var(--WindowText);*/
	/*border: 1px solid var(--WindowFrame);*/
}
.window-content {
	background: var(--ButtonFace); /* ?? speculation */
}
